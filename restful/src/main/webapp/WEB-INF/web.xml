<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://xmlns.jcp.org/xml/ns/javaee"
		xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
		version="3.1">
		<display-name>TN Platform</display-name>
		<context-param>
				<param-name>contextClass</param-name>
				<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</context-param>
		<context-param>
				<param-name>contextConfigLocation</param-name>
				<param-value>kr.co.expernet.common.config</param-value>
		</context-param>
		<!--  HiddenHttpMethodFilter 클래스는 일반적인 ServletFilter 클래스로, POST 메소드의 파라미터로 
				넘어온 _method 값을 HTTP Method로 변환해주는 기능을 한다. 
				HTML form 태그 안에 _method라는 파라미터로 	delete 값을 설정 하고 POST 메소드로 호출하면, 
				요청받은 HiddenHttpMethodFilter 클래스에 의 해 DELETE 메소드로 변환되어 요청을 처리하게 된다.
				HTTP에는 4개의 메소드가 모두 선언되어 있지만, HTML은 GET과 POST만 지원한다. -->
		<filter>
				<filter-name>httpMethodFilter</filter-name>
				<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		</filter>
		<filter-mapping>
				<filter-name>httpMethodFilter</filter-name>
				<url-pattern>/*</url-pattern>
		</filter-mapping>
		<filter>
				<filter-name>encodingFilter</filter-name>
				<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
				<init-param>
						<param-name>encoding</param-name>
						<param-value>UTF-8</param-value>
				</init-param>
		</filter>
		<filter-mapping>
				<filter-name>encodingFilter</filter-name>
				<url-pattern>/*</url-pattern>
		</filter-mapping>
		<listener>
				<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		</listener>
		<servlet>
				<servlet-name>rest</servlet-name>
				<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
				<init-param>
						<param-name>contextClass</param-name>
						<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
				</init-param>
				<init-param>
						<param-name>contextConfigLocation</param-name>
						<param-value>kr.co.expernet.rest.config</param-value>
				</init-param>
				<load-on-startup>1</load-on-startup>
		</servlet>
		<servlet-mapping>
				<servlet-name>rest</servlet-name>
				<url-pattern>/*</url-pattern>
		</servlet-mapping>
</web-app>